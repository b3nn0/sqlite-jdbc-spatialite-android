diff --git a/src/main/java/org/sqlite/core/NativeDB.c b/src/main/java/org/sqlite/core/NativeDB.c
index adafb8f..fe7b7e2 100644
--- a/src/main/java/org/sqlite/core/NativeDB.c
+++ b/src/main/java/org/sqlite/core/NativeDB.c
@@ -18,7 +18,8 @@
 #include <string.h>
 #include <assert.h>
 #include "NativeDB.h"
-#include "sqlite3.h"
+#include <sqlite3.h>
+#include <spatialite.h>
 
 // Java class variables and method references initialized on library load.
 // These classes are weak references to that if the classloader is no longer referenced (garbage)
@@ -528,6 +529,20 @@ JNIEXPORT jint JNICALL Java_org_sqlite_core_NativeDB_enable_1load_1extension(
     return sqlite3_enable_load_extension(db, enable ? 1 : 0);
 }
 
+static void * getSpatialMemory(JNIEnv *env, jobject this) {
+    static jfieldID pointer = 0;
+    if (!pointer) pointer = (*env)->GetFieldID(env, dbclass, "spatialMemory", "J");
+
+    return toref((*env)->GetLongField(env, this, pointer));
+}
+
+static void setSpatialMemory(JNIEnv *env, jobject this, void* ref) {
+    static jfieldID pointer = 0;
+    if (!pointer) pointer = (*env)->GetFieldID(env, dbclass, "spatialMemory", "J");
+
+    (*env)->SetLongField(env, this, pointer, fromref(ref));
+
+}
 
 JNIEXPORT void JNICALL Java_org_sqlite_core_NativeDB__1open_1utf8(
         JNIEnv *env, jobject this, jbyteArray file, jint flags)
@@ -560,6 +575,10 @@ JNIEXPORT void JNICALL Java_org_sqlite_core_NativeDB__1open_1utf8(
 
     // Ignore failures, as we can tolerate regular result codes.
     (void) sqlite3_extended_result_codes(db, 1);
+
+    void* spatialMemory = spatialite_alloc_connection();
+    spatialite_init_ex(db, spatialMemory, 1);
+    setSpatialMemory(env, this, spatialMemory);
 }
 
 JNIEXPORT void JNICALL Java_org_sqlite_core_NativeDB_interrupt(JNIEnv *env, jobject this)
@@ -1858,4 +1877,8 @@ JNIEXPORT void JNICALL Java_org_sqlite_core_NativeDB__1close(
         }
         sethandle(env, nativeDB, 0);
     }
+    void* spatial = getSpatialMemory(env, nativeDB);
+    if (spatial) {
+        spatialite_cleanup_ex(spatial);
+    }
 }
diff --git a/src/main/java/org/sqlite/core/NativeDB.java b/src/main/java/org/sqlite/core/NativeDB.java
index 5b26f83..75280dc 100644
--- a/src/main/java/org/sqlite/core/NativeDB.java
+++ b/src/main/java/org/sqlite/core/NativeDB.java
@@ -35,6 +35,8 @@ public final class NativeDB extends DB {
 
     /** SQLite connection handle. */
     private long pointer = 0;
+    /** Pointer to native memory (see spatialite_init_ex) */
+    long spatialMemory = 0;
 
     private static boolean isLoaded;
     private static boolean loadSucceeded;
